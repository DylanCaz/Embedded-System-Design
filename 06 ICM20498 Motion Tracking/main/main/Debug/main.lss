
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  00000b10  00000ba4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b10  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000038  008001a0  008001a0  00000c44  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c44  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ca0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001123  00000000  00000000  00000d88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b2b  00000000  00000000  00001eab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000858  00000000  00000000  000029d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000230  00000000  00000000  00003230  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000632  00000000  00000000  00003460  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006f0  00000000  00000000  00003a92  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00004182  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e0 e1       	ldi	r30, 0x10	; 16
  c8:	fb e0       	ldi	r31, 0x0B	; 11
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a0 3a       	cpi	r26, 0xA0	; 160
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a0 ea       	ldi	r26, 0xA0	; 160
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a8 3d       	cpi	r26, 0xD8	; 216
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 47 01 	call	0x28e	; 0x28e <main>
  ea:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <i2c_init>:
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR0 & (1<<TWINT)));    

    return TWDR0;

}/* i2c_readAck */
  f2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  f6:	88 e4       	ldi	r24, 0x48	; 72
  f8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  fc:	08 95       	ret

000000fe <i2c_start>:
  fe:	94 ea       	ldi	r25, 0xA4	; 164
 100:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 104:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 108:	99 23       	and	r25, r25
 10a:	e4 f7       	brge	.-8      	; 0x104 <i2c_start+0x6>
 10c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 110:	98 7f       	andi	r25, 0xF8	; 248
 112:	98 30       	cpi	r25, 0x08	; 8
 114:	11 f0       	breq	.+4      	; 0x11a <i2c_start+0x1c>
 116:	90 31       	cpi	r25, 0x10	; 16
 118:	91 f4       	brne	.+36     	; 0x13e <i2c_start+0x40>
 11a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 11e:	84 e8       	ldi	r24, 0x84	; 132
 120:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 124:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 128:	88 23       	and	r24, r24
 12a:	e4 f7       	brge	.-8      	; 0x124 <i2c_start+0x26>
 12c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 130:	88 7f       	andi	r24, 0xF8	; 248
 132:	88 31       	cpi	r24, 0x18	; 24
 134:	31 f0       	breq	.+12     	; 0x142 <i2c_start+0x44>
 136:	80 34       	cpi	r24, 0x40	; 64
 138:	31 f4       	brne	.+12     	; 0x146 <i2c_start+0x48>
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	08 95       	ret
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	08 95       	ret
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	08 95       	ret
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	08 95       	ret

0000014a <i2c_stop>:
 14a:	84 e9       	ldi	r24, 0x94	; 148
 14c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 150:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 154:	84 fd       	sbrc	r24, 4
 156:	fc cf       	rjmp	.-8      	; 0x150 <i2c_stop+0x6>
 158:	08 95       	ret

0000015a <i2c_write>:
 15a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 15e:	84 e8       	ldi	r24, 0x84	; 132
 160:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 164:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 168:	88 23       	and	r24, r24
 16a:	e4 f7       	brge	.-8      	; 0x164 <i2c_write+0xa>
 16c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 170:	88 7f       	andi	r24, 0xF8	; 248
 172:	88 32       	cpi	r24, 0x28	; 40
 174:	11 f0       	breq	.+4      	; 0x17a <i2c_write+0x20>
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	08 95       	ret
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	08 95       	ret

0000017e <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
uint8_t i2c_readNak(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN);
 17e:	84 e8       	ldi	r24, 0x84	; 132
 180:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR0 & (1<<TWINT)));
 184:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 188:	88 23       	and	r24, r24
 18a:	e4 f7       	brge	.-8      	; 0x184 <i2c_readNak+0x6>
	
    return TWDR0;
 18c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>

 190:	08 95       	ret

00000192 <USART_init>:
		_delay_ms(1000); 
	}
}

void USART_init(unsigned int ubrr){
	UBRR0H = (unsigned char)(ubrr>>8);
 192:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
 196:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1<<TXEN0);
 19a:	88 e0       	ldi	r24, 0x08	; 8
 19c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (3<<UCSZ00);
 1a0:	86 e0       	ldi	r24, 0x06	; 6
 1a2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 1a6:	08 95       	ret

000001a8 <USART_tx_string>:
}

void USART_tx_string(char * data){
 1a8:	fc 01       	movw	r30, r24
	while((*data != '\0')){
 1aa:	07 c0       	rjmp	.+14     	; 0x1ba <USART_tx_string+0x12>
		while(!(UCSR0A & (1<<UDRE0)));
 1ac:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1b0:	95 ff       	sbrs	r25, 5
 1b2:	fc cf       	rjmp	.-8      	; 0x1ac <USART_tx_string+0x4>
		UDR0 = *data;
 1b4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
		data++;
 1b8:	31 96       	adiw	r30, 0x01	; 1
	UCSR0B = (1<<TXEN0);
	UCSR0C = (3<<UCSZ00);
}

void USART_tx_string(char * data){
	while((*data != '\0')){
 1ba:	80 81       	ld	r24, Z
 1bc:	81 11       	cpse	r24, r1
 1be:	f6 cf       	rjmp	.-20     	; 0x1ac <USART_tx_string+0x4>
		while(!(UCSR0A & (1<<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
 1c0:	08 95       	ret

000001c2 <ICM20948_verify_whoami>:

/* Ensure we are talking to ICM, print WHO_AM_I to terminal, should be 0xEA or 234 */
void ICM20948_verify_whoami(void){
	uint8_t who_am_i = 0;
	i2c_start(ICM20948+I2C_WRITE);		// 68 << 1 = D0
 1c2:	80 ed       	ldi	r24, 0xD0	; 208
 1c4:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_start>
	i2c_write(WHO_AM_I);				// select who_am_i
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	0e 94 ad 00 	call	0x15a	; 0x15a <i2c_write>
	i2c_stop();							// halt i2c
 1ce:	0e 94 a5 00 	call	0x14a	; 0x14a <i2c_stop>
	i2c_start(ICM20948+I2C_READ);		// D0 + 1(TWI READ)
 1d2:	81 ed       	ldi	r24, 0xD1	; 209
 1d4:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_start>
	who_am_i = i2c_readNak();			// save to variable
 1d8:	0e 94 bf 00 	call	0x17e	; 0x17e <i2c_readNak>
	snprintf(buffer,sizeof(buffer),"DEVICE ID: %02x\r\n",who_am_i);
 1dc:	1f 92       	push	r1
 1de:	8f 93       	push	r24
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	91 e0       	ldi	r25, 0x01	; 1
 1e4:	9f 93       	push	r25
 1e6:	8f 93       	push	r24
 1e8:	1f 92       	push	r1
 1ea:	8e e1       	ldi	r24, 0x1E	; 30
 1ec:	8f 93       	push	r24
 1ee:	8a ea       	ldi	r24, 0xAA	; 170
 1f0:	91 e0       	ldi	r25, 0x01	; 1
 1f2:	9f 93       	push	r25
 1f4:	8f 93       	push	r24
 1f6:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
	USART_tx_string(buffer);
 1fa:	8a ea       	ldi	r24, 0xAA	; 170
 1fc:	91 e0       	ldi	r25, 0x01	; 1
 1fe:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
	i2c_stop();
 202:	0e 94 a5 00 	call	0x14a	; 0x14a <i2c_stop>
}
 206:	8d b7       	in	r24, 0x3d	; 61
 208:	9e b7       	in	r25, 0x3e	; 62
 20a:	08 96       	adiw	r24, 0x08	; 8
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	f8 94       	cli
 210:	9e bf       	out	0x3e, r25	; 62
 212:	0f be       	out	0x3f, r0	; 63
 214:	8d bf       	out	0x3d, r24	; 61
 216:	08 95       	ret

00000218 <ICM20948_Init>:

/* Change clksel to use best available clock source  */
void ICM20948_Init(void){
	i2c_start(0xD0);					// select ICM20948 (0x68<<1)+0
 218:	80 ed       	ldi	r24, 0xD0	; 208
 21a:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_start>
	i2c_write(0x06);					// select pwr_mgmt_1
 21e:	86 e0       	ldi	r24, 0x06	; 6
 220:	0e 94 ad 00 	call	0x15a	; 0x15a <i2c_write>
	i2c_write(0x01);					// set bit 1
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	0e 94 ad 00 	call	0x15a	; 0x15a <i2c_write>
	i2c_stop();
 22a:	0e 94 a5 00 	call	0x14a	; 0x14a <i2c_stop>
 22e:	08 95       	ret

00000230 <ICM20948_readreg16>:

}

/* modified to writes to and reads from reg+1 */
uint16_t ICM20948_readreg16(uint8_t reg)
{
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	c8 2f       	mov	r28, r24
	i2c_start(ICM20948+I2C_WRITE);		// set device address and write mode
 236:	80 ed       	ldi	r24, 0xD0	; 208
 238:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_start>
	i2c_write(reg);						// ACCEL_XOUT
 23c:	8c 2f       	mov	r24, r28
 23e:	0e 94 ad 00 	call	0x15a	; 0x15a <i2c_write>
	i2c_start(ICM20948+I2C_READ);		// set device address and read mode
 242:	81 ed       	ldi	r24, 0xD1	; 209
 244:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_start>
	raw = i2c_readNak();                // read one intermediate byte
 248:	0e 94 bf 00 	call	0x17e	; 0x17e <i2c_readNak>
 24c:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <raw>
	i2c_start(ICM20948+I2C_WRITE);
 250:	80 ed       	ldi	r24, 0xD0	; 208
 252:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_start>
	i2c_write(reg + 1);
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	8c 0f       	add	r24, r28
 25a:	0e 94 ad 00 	call	0x15a	; 0x15a <i2c_write>
	i2c_start(ICM20948+I2C_READ);
 25e:	81 ed       	ldi	r24, 0xD1	; 209
 260:	0e 94 7f 00 	call	0xfe	; 0xfe <i2c_start>
	bigraw = (raw<<8) | i2c_readNak();  // read last byte
 264:	c0 91 c8 01 	lds	r28, 0x01C8	; 0x8001c8 <raw>
 268:	d0 e0       	ldi	r29, 0x00	; 0
 26a:	dc 2f       	mov	r29, r28
 26c:	cc 27       	eor	r28, r28
 26e:	0e 94 bf 00 	call	0x17e	; 0x17e <i2c_readNak>
 272:	c8 2b       	or	r28, r24
 274:	d0 93 cc 01 	sts	0x01CC, r29	; 0x8001cc <bigraw+0x1>
 278:	c0 93 cb 01 	sts	0x01CB, r28	; 0x8001cb <bigraw>
	i2c_stop();
 27c:	0e 94 a5 00 	call	0x14a	; 0x14a <i2c_stop>
	return bigraw;
}
 280:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <bigraw>
 284:	90 91 cc 01 	lds	r25, 0x01CC	; 0x8001cc <bigraw+0x1>
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <main>:
uint16_t magne_y;
uint16_t magne_z;

int main(void)
{
	PORTC |= (1<<5) | (1<<4);			// enable pull ups for TWI pins
 28e:	88 b1       	in	r24, 0x08	; 8
 290:	80 63       	ori	r24, 0x30	; 48
 292:	88 b9       	out	0x08, r24	; 8
	
	i2c_init();							// initialize TWI
 294:	0e 94 79 00 	call	0xf2	; 0xf2 <i2c_init>
	USART_init(BAUD_PRESCALLER);		// initialize USART
 298:	87 e6       	ldi	r24, 0x67	; 103
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	0e 94 c9 00 	call	0x192	; 0x192 <USART_init>
	USART_tx_string("UART Connected!\r\n");
 2a0:	82 e1       	ldi	r24, 0x12	; 18
 2a2:	91 e0       	ldi	r25, 0x01	; 1
 2a4:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
    
	ICM20948_Init();				// change clksel on icm
 2a8:	0e 94 0c 01 	call	0x218	; 0x218 <ICM20948_Init>
	ICM20948_verify_whoami();			// verify we are connected
 2ac:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <ICM20948_verify_whoami>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b0:	2f ef       	ldi	r18, 0xFF	; 255
 2b2:	83 ec       	ldi	r24, 0xC3	; 195
 2b4:	99 e0       	ldi	r25, 0x09	; 9
 2b6:	21 50       	subi	r18, 0x01	; 1
 2b8:	80 40       	sbci	r24, 0x00	; 0
 2ba:	90 40       	sbci	r25, 0x00	; 0
 2bc:	e1 f7       	brne	.-8      	; 0x2b6 <main+0x28>
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <main+0x32>
 2c0:	00 00       	nop
	
	_delay_ms(200);

	while(1){
		accel_x = ICM20948_readreg16(ACCEL_XOUT_H);
 2c2:	8d e2       	ldi	r24, 0x2D	; 45
 2c4:	0e 94 18 01 	call	0x230	; 0x230 <ICM20948_readreg16>
 2c8:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <__data_end+0x1>
 2cc:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__data_end>
		accel_y = ICM20948_readreg16(ACCEL_YOUT_H);
 2d0:	8f e2       	ldi	r24, 0x2F	; 47
 2d2:	0e 94 18 01 	call	0x230	; 0x230 <ICM20948_readreg16>
 2d6:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <accel_y+0x1>
 2da:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <accel_y>
		accel_z = ICM20948_readreg16(ACCEL_ZOUT_H);
 2de:	81 e3       	ldi	r24, 0x31	; 49
 2e0:	0e 94 18 01 	call	0x230	; 0x230 <ICM20948_readreg16>
 2e4:	90 93 d0 01 	sts	0x01D0, r25	; 0x8001d0 <accel_z+0x1>
 2e8:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <accel_z>
		
		gyro_x = ICM20948_readreg16(GYRO_XOUT_H);
 2ec:	83 e3       	ldi	r24, 0x33	; 51
 2ee:	0e 94 18 01 	call	0x230	; 0x230 <ICM20948_readreg16>
 2f2:	90 93 ca 01 	sts	0x01CA, r25	; 0x8001ca <gyro_x+0x1>
 2f6:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <gyro_x>
		gyro_y = ICM20948_readreg16(GYRO_YOUT_H);
 2fa:	85 e3       	ldi	r24, 0x35	; 53
 2fc:	0e 94 18 01 	call	0x230	; 0x230 <ICM20948_readreg16>
 300:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <gyro_y+0x1>
 304:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <gyro_y>
		gyro_z = ICM20948_readreg16(GYRO_ZOUT_H);
 308:	87 e3       	ldi	r24, 0x37	; 55
 30a:	0e 94 18 01 	call	0x230	; 0x230 <ICM20948_readreg16>
 30e:	90 93 d2 01 	sts	0x01D2, r25	; 0x8001d2 <gyro_z+0x1>
 312:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <gyro_z>
		
		magne_x = ICM20948_readreg16(MAGNE_XOUT_H);
 316:	89 e3       	ldi	r24, 0x39	; 57
 318:	0e 94 18 01 	call	0x230	; 0x230 <ICM20948_readreg16>
 31c:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <magne_x+0x1>
 320:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <magne_x>
		magne_y = ICM20948_readreg16(MAGNE_YOUT_H);
 324:	8b e3       	ldi	r24, 0x3B	; 59
 326:	0e 94 18 01 	call	0x230	; 0x230 <ICM20948_readreg16>
 32a:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <magne_y+0x1>
 32e:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <magne_y>
		magne_z = ICM20948_readreg16(MAGNE_ZOUT_H);
 332:	8d e3       	ldi	r24, 0x3D	; 61
 334:	0e 94 18 01 	call	0x230	; 0x230 <ICM20948_readreg16>
 338:	90 93 ce 01 	sts	0x01CE, r25	; 0x8001ce <magne_z+0x1>
 33c:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <magne_z>
		
		snprintf(buffer,sizeof(buffer),"ACCEL X: %d\r\n",accel_x);
 340:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <__data_end+0x1>
 344:	8f 93       	push	r24
 346:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <__data_end>
 34a:	8f 93       	push	r24
 34c:	84 e2       	ldi	r24, 0x24	; 36
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	9f 93       	push	r25
 352:	8f 93       	push	r24
 354:	1f 92       	push	r1
 356:	1e e1       	ldi	r17, 0x1E	; 30
 358:	1f 93       	push	r17
 35a:	ca ea       	ldi	r28, 0xAA	; 170
 35c:	d1 e0       	ldi	r29, 0x01	; 1
 35e:	df 93       	push	r29
 360:	cf 93       	push	r28
 362:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
		USART_tx_string(buffer);
 366:	ce 01       	movw	r24, r28
 368:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		
		snprintf(buffer,sizeof(buffer),"ACCEL Y: %d\r\n",accel_y);
 36c:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <accel_y+0x1>
 370:	8f 93       	push	r24
 372:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <accel_y>
 376:	8f 93       	push	r24
 378:	82 e3       	ldi	r24, 0x32	; 50
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	9f 93       	push	r25
 37e:	8f 93       	push	r24
 380:	1f 92       	push	r1
 382:	1f 93       	push	r17
 384:	df 93       	push	r29
 386:	cf 93       	push	r28
 388:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
		USART_tx_string(buffer);
 38c:	ce 01       	movw	r24, r28
 38e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		
		snprintf(buffer,sizeof(buffer),"ACCEL Z: %d\r\n",accel_z);
 392:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <accel_z+0x1>
 396:	8f 93       	push	r24
 398:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <accel_z>
 39c:	8f 93       	push	r24
 39e:	80 e4       	ldi	r24, 0x40	; 64
 3a0:	91 e0       	ldi	r25, 0x01	; 1
 3a2:	9f 93       	push	r25
 3a4:	8f 93       	push	r24
 3a6:	1f 92       	push	r1
 3a8:	1f 93       	push	r17
 3aa:	df 93       	push	r29
 3ac:	cf 93       	push	r28
 3ae:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
		USART_tx_string(buffer);
 3b2:	ce 01       	movw	r24, r28
 3b4:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		
		USART_tx_string("\r\n");
 3b8:	81 e2       	ldi	r24, 0x21	; 33
 3ba:	91 e0       	ldi	r25, 0x01	; 1
 3bc:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
 3c0:	2f ef       	ldi	r18, 0xFF	; 255
 3c2:	89 e6       	ldi	r24, 0x69	; 105
 3c4:	98 e1       	ldi	r25, 0x18	; 24
 3c6:	21 50       	subi	r18, 0x01	; 1
 3c8:	80 40       	sbci	r24, 0x00	; 0
 3ca:	90 40       	sbci	r25, 0x00	; 0
 3cc:	e1 f7       	brne	.-8      	; 0x3c6 <main+0x138>
 3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <main+0x142>
 3d0:	00 00       	nop
		_delay_ms(500); 
		
		snprintf(buffer,sizeof(buffer),"GYRO X: %d\r\n",gyro_x);
 3d2:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <gyro_x+0x1>
 3d6:	8f 93       	push	r24
 3d8:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <gyro_x>
 3dc:	8f 93       	push	r24
 3de:	8e e4       	ldi	r24, 0x4E	; 78
 3e0:	91 e0       	ldi	r25, 0x01	; 1
 3e2:	9f 93       	push	r25
 3e4:	8f 93       	push	r24
 3e6:	1f 92       	push	r1
 3e8:	1f 93       	push	r17
 3ea:	df 93       	push	r29
 3ec:	cf 93       	push	r28
 3ee:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
		USART_tx_string(buffer);
 3f2:	8d b7       	in	r24, 0x3d	; 61
 3f4:	9e b7       	in	r25, 0x3e	; 62
 3f6:	80 96       	adiw	r24, 0x20	; 32
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	f8 94       	cli
 3fc:	9e bf       	out	0x3e, r25	; 62
 3fe:	0f be       	out	0x3f, r0	; 63
 400:	8d bf       	out	0x3d, r24	; 61
 402:	ce 01       	movw	r24, r28
 404:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		
		snprintf(buffer,sizeof(buffer),"GYRO Y: %d\r\n",gyro_y);
 408:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <gyro_y+0x1>
 40c:	8f 93       	push	r24
 40e:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <gyro_y>
 412:	8f 93       	push	r24
 414:	8b e5       	ldi	r24, 0x5B	; 91
 416:	91 e0       	ldi	r25, 0x01	; 1
 418:	9f 93       	push	r25
 41a:	8f 93       	push	r24
 41c:	1f 92       	push	r1
 41e:	1f 93       	push	r17
 420:	df 93       	push	r29
 422:	cf 93       	push	r28
 424:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
		USART_tx_string(buffer);
 428:	ce 01       	movw	r24, r28
 42a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		
		snprintf(buffer,sizeof(buffer),"GYRO Z: %d\r\n",gyro_z);
 42e:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <gyro_z+0x1>
 432:	8f 93       	push	r24
 434:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <gyro_z>
 438:	8f 93       	push	r24
 43a:	88 e6       	ldi	r24, 0x68	; 104
 43c:	91 e0       	ldi	r25, 0x01	; 1
 43e:	9f 93       	push	r25
 440:	8f 93       	push	r24
 442:	1f 92       	push	r1
 444:	1f 93       	push	r17
 446:	df 93       	push	r29
 448:	cf 93       	push	r28
 44a:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
		USART_tx_string(buffer);
 44e:	ce 01       	movw	r24, r28
 450:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		
		USART_tx_string("\r\n");
 454:	81 e2       	ldi	r24, 0x21	; 33
 456:	91 e0       	ldi	r25, 0x01	; 1
 458:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
 45c:	2f ef       	ldi	r18, 0xFF	; 255
 45e:	89 e6       	ldi	r24, 0x69	; 105
 460:	98 e1       	ldi	r25, 0x18	; 24
 462:	21 50       	subi	r18, 0x01	; 1
 464:	80 40       	sbci	r24, 0x00	; 0
 466:	90 40       	sbci	r25, 0x00	; 0
 468:	e1 f7       	brne	.-8      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 46a:	00 c0       	rjmp	.+0      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 46c:	00 00       	nop
		_delay_ms(500);
		
		snprintf(buffer,sizeof(buffer),"MAGNE X: %d\r\n", magne_x); //
 46e:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <magne_x+0x1>
 472:	8f 93       	push	r24
 474:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <magne_x>
 478:	8f 93       	push	r24
 47a:	85 e7       	ldi	r24, 0x75	; 117
 47c:	91 e0       	ldi	r25, 0x01	; 1
 47e:	9f 93       	push	r25
 480:	8f 93       	push	r24
 482:	1f 92       	push	r1
 484:	1f 93       	push	r17
 486:	df 93       	push	r29
 488:	cf 93       	push	r28
 48a:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
		USART_tx_string(buffer);
 48e:	ce 01       	movw	r24, r28
 490:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		
		snprintf(buffer,sizeof(buffer),"MAGNE Y: %d\r\n", magne_y);//
 494:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <magne_y+0x1>
 498:	8f 93       	push	r24
 49a:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <magne_y>
 49e:	8f 93       	push	r24
 4a0:	83 e8       	ldi	r24, 0x83	; 131
 4a2:	91 e0       	ldi	r25, 0x01	; 1
 4a4:	9f 93       	push	r25
 4a6:	8f 93       	push	r24
 4a8:	1f 92       	push	r1
 4aa:	1f 93       	push	r17
 4ac:	df 93       	push	r29
 4ae:	cf 93       	push	r28
 4b0:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
		USART_tx_string(buffer);
 4b4:	8d b7       	in	r24, 0x3d	; 61
 4b6:	9e b7       	in	r25, 0x3e	; 62
 4b8:	80 96       	adiw	r24, 0x20	; 32
 4ba:	0f b6       	in	r0, 0x3f	; 63
 4bc:	f8 94       	cli
 4be:	9e bf       	out	0x3e, r25	; 62
 4c0:	0f be       	out	0x3f, r0	; 63
 4c2:	8d bf       	out	0x3d, r24	; 61
 4c4:	ce 01       	movw	r24, r28
 4c6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		
		snprintf(buffer,sizeof(buffer),"MAGNE Z: %d\r\n", magne_z);//
 4ca:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <magne_z+0x1>
 4ce:	8f 93       	push	r24
 4d0:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <magne_z>
 4d4:	8f 93       	push	r24
 4d6:	81 e9       	ldi	r24, 0x91	; 145
 4d8:	91 e0       	ldi	r25, 0x01	; 1
 4da:	9f 93       	push	r25
 4dc:	8f 93       	push	r24
 4de:	1f 92       	push	r1
 4e0:	1f 93       	push	r17
 4e2:	df 93       	push	r29
 4e4:	cf 93       	push	r28
 4e6:	0e 94 8e 02 	call	0x51c	; 0x51c <snprintf>
		USART_tx_string(buffer);
 4ea:	ce 01       	movw	r24, r28
 4ec:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		
		USART_tx_string("\r\n");
 4f0:	81 e2       	ldi	r24, 0x21	; 33
 4f2:	91 e0       	ldi	r25, 0x01	; 1
 4f4:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
 4f8:	8f ef       	ldi	r24, 0xFF	; 255
 4fa:	93 ed       	ldi	r25, 0xD3	; 211
 4fc:	20 e3       	ldi	r18, 0x30	; 48
 4fe:	81 50       	subi	r24, 0x01	; 1
 500:	90 40       	sbci	r25, 0x00	; 0
 502:	20 40       	sbci	r18, 0x00	; 0
 504:	e1 f7       	brne	.-8      	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
 506:	00 c0       	rjmp	.+0      	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 508:	00 00       	nop
 50a:	8d b7       	in	r24, 0x3d	; 61
 50c:	9e b7       	in	r25, 0x3e	; 62
 50e:	08 96       	adiw	r24, 0x08	; 8
 510:	0f b6       	in	r0, 0x3f	; 63
 512:	f8 94       	cli
 514:	9e bf       	out	0x3e, r25	; 62
 516:	0f be       	out	0x3f, r0	; 63
 518:	8d bf       	out	0x3d, r24	; 61
 51a:	d3 ce       	rjmp	.-602    	; 0x2c2 <main+0x34>

0000051c <snprintf>:
 51c:	ae e0       	ldi	r26, 0x0E	; 14
 51e:	b0 e0       	ldi	r27, 0x00	; 0
 520:	e4 e9       	ldi	r30, 0x94	; 148
 522:	f2 e0       	ldi	r31, 0x02	; 2
 524:	0c 94 5d 05 	jmp	0xaba	; 0xaba <__prologue_saves__+0x1c>
 528:	0d 89       	ldd	r16, Y+21	; 0x15
 52a:	1e 89       	ldd	r17, Y+22	; 0x16
 52c:	8f 89       	ldd	r24, Y+23	; 0x17
 52e:	98 8d       	ldd	r25, Y+24	; 0x18
 530:	26 e0       	ldi	r18, 0x06	; 6
 532:	2c 83       	std	Y+4, r18	; 0x04
 534:	1a 83       	std	Y+2, r17	; 0x02
 536:	09 83       	std	Y+1, r16	; 0x01
 538:	97 ff       	sbrs	r25, 7
 53a:	02 c0       	rjmp	.+4      	; 0x540 <snprintf+0x24>
 53c:	80 e0       	ldi	r24, 0x00	; 0
 53e:	90 e8       	ldi	r25, 0x80	; 128
 540:	01 97       	sbiw	r24, 0x01	; 1
 542:	9e 83       	std	Y+6, r25	; 0x06
 544:	8d 83       	std	Y+5, r24	; 0x05
 546:	ae 01       	movw	r20, r28
 548:	45 5e       	subi	r20, 0xE5	; 229
 54a:	5f 4f       	sbci	r21, 0xFF	; 255
 54c:	69 8d       	ldd	r22, Y+25	; 0x19
 54e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 550:	ce 01       	movw	r24, r28
 552:	01 96       	adiw	r24, 0x01	; 1
 554:	0e 94 be 02 	call	0x57c	; 0x57c <vfprintf>
 558:	4d 81       	ldd	r20, Y+5	; 0x05
 55a:	5e 81       	ldd	r21, Y+6	; 0x06
 55c:	57 fd       	sbrc	r21, 7
 55e:	0a c0       	rjmp	.+20     	; 0x574 <snprintf+0x58>
 560:	2f 81       	ldd	r18, Y+7	; 0x07
 562:	38 85       	ldd	r19, Y+8	; 0x08
 564:	42 17       	cp	r20, r18
 566:	53 07       	cpc	r21, r19
 568:	0c f4       	brge	.+2      	; 0x56c <snprintf+0x50>
 56a:	9a 01       	movw	r18, r20
 56c:	f8 01       	movw	r30, r16
 56e:	e2 0f       	add	r30, r18
 570:	f3 1f       	adc	r31, r19
 572:	10 82       	st	Z, r1
 574:	2e 96       	adiw	r28, 0x0e	; 14
 576:	e4 e0       	ldi	r30, 0x04	; 4
 578:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__epilogue_restores__+0x1c>

0000057c <vfprintf>:
 57c:	ab e0       	ldi	r26, 0x0B	; 11
 57e:	b0 e0       	ldi	r27, 0x00	; 0
 580:	e4 ec       	ldi	r30, 0xC4	; 196
 582:	f2 e0       	ldi	r31, 0x02	; 2
 584:	0c 94 4f 05 	jmp	0xa9e	; 0xa9e <__prologue_saves__>
 588:	6c 01       	movw	r12, r24
 58a:	7b 01       	movw	r14, r22
 58c:	8a 01       	movw	r16, r20
 58e:	fc 01       	movw	r30, r24
 590:	17 82       	std	Z+7, r1	; 0x07
 592:	16 82       	std	Z+6, r1	; 0x06
 594:	83 81       	ldd	r24, Z+3	; 0x03
 596:	81 ff       	sbrs	r24, 1
 598:	cc c1       	rjmp	.+920    	; 0x932 <__stack+0x33>
 59a:	ce 01       	movw	r24, r28
 59c:	01 96       	adiw	r24, 0x01	; 1
 59e:	3c 01       	movw	r6, r24
 5a0:	f6 01       	movw	r30, r12
 5a2:	93 81       	ldd	r25, Z+3	; 0x03
 5a4:	f7 01       	movw	r30, r14
 5a6:	93 fd       	sbrc	r25, 3
 5a8:	85 91       	lpm	r24, Z+
 5aa:	93 ff       	sbrs	r25, 3
 5ac:	81 91       	ld	r24, Z+
 5ae:	7f 01       	movw	r14, r30
 5b0:	88 23       	and	r24, r24
 5b2:	09 f4       	brne	.+2      	; 0x5b6 <vfprintf+0x3a>
 5b4:	ba c1       	rjmp	.+884    	; 0x92a <__stack+0x2b>
 5b6:	85 32       	cpi	r24, 0x25	; 37
 5b8:	39 f4       	brne	.+14     	; 0x5c8 <vfprintf+0x4c>
 5ba:	93 fd       	sbrc	r25, 3
 5bc:	85 91       	lpm	r24, Z+
 5be:	93 ff       	sbrs	r25, 3
 5c0:	81 91       	ld	r24, Z+
 5c2:	7f 01       	movw	r14, r30
 5c4:	85 32       	cpi	r24, 0x25	; 37
 5c6:	29 f4       	brne	.+10     	; 0x5d2 <vfprintf+0x56>
 5c8:	b6 01       	movw	r22, r12
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	0e 94 b5 04 	call	0x96a	; 0x96a <fputc>
 5d0:	e7 cf       	rjmp	.-50     	; 0x5a0 <vfprintf+0x24>
 5d2:	91 2c       	mov	r9, r1
 5d4:	21 2c       	mov	r2, r1
 5d6:	31 2c       	mov	r3, r1
 5d8:	ff e1       	ldi	r31, 0x1F	; 31
 5da:	f3 15       	cp	r31, r3
 5dc:	d8 f0       	brcs	.+54     	; 0x614 <vfprintf+0x98>
 5de:	8b 32       	cpi	r24, 0x2B	; 43
 5e0:	79 f0       	breq	.+30     	; 0x600 <vfprintf+0x84>
 5e2:	38 f4       	brcc	.+14     	; 0x5f2 <vfprintf+0x76>
 5e4:	80 32       	cpi	r24, 0x20	; 32
 5e6:	79 f0       	breq	.+30     	; 0x606 <vfprintf+0x8a>
 5e8:	83 32       	cpi	r24, 0x23	; 35
 5ea:	a1 f4       	brne	.+40     	; 0x614 <vfprintf+0x98>
 5ec:	23 2d       	mov	r18, r3
 5ee:	20 61       	ori	r18, 0x10	; 16
 5f0:	1d c0       	rjmp	.+58     	; 0x62c <vfprintf+0xb0>
 5f2:	8d 32       	cpi	r24, 0x2D	; 45
 5f4:	61 f0       	breq	.+24     	; 0x60e <vfprintf+0x92>
 5f6:	80 33       	cpi	r24, 0x30	; 48
 5f8:	69 f4       	brne	.+26     	; 0x614 <vfprintf+0x98>
 5fa:	23 2d       	mov	r18, r3
 5fc:	21 60       	ori	r18, 0x01	; 1
 5fe:	16 c0       	rjmp	.+44     	; 0x62c <vfprintf+0xb0>
 600:	83 2d       	mov	r24, r3
 602:	82 60       	ori	r24, 0x02	; 2
 604:	38 2e       	mov	r3, r24
 606:	e3 2d       	mov	r30, r3
 608:	e4 60       	ori	r30, 0x04	; 4
 60a:	3e 2e       	mov	r3, r30
 60c:	2a c0       	rjmp	.+84     	; 0x662 <vfprintf+0xe6>
 60e:	f3 2d       	mov	r31, r3
 610:	f8 60       	ori	r31, 0x08	; 8
 612:	1d c0       	rjmp	.+58     	; 0x64e <vfprintf+0xd2>
 614:	37 fc       	sbrc	r3, 7
 616:	2d c0       	rjmp	.+90     	; 0x672 <vfprintf+0xf6>
 618:	20 ed       	ldi	r18, 0xD0	; 208
 61a:	28 0f       	add	r18, r24
 61c:	2a 30       	cpi	r18, 0x0A	; 10
 61e:	40 f0       	brcs	.+16     	; 0x630 <vfprintf+0xb4>
 620:	8e 32       	cpi	r24, 0x2E	; 46
 622:	b9 f4       	brne	.+46     	; 0x652 <vfprintf+0xd6>
 624:	36 fc       	sbrc	r3, 6
 626:	81 c1       	rjmp	.+770    	; 0x92a <__stack+0x2b>
 628:	23 2d       	mov	r18, r3
 62a:	20 64       	ori	r18, 0x40	; 64
 62c:	32 2e       	mov	r3, r18
 62e:	19 c0       	rjmp	.+50     	; 0x662 <vfprintf+0xe6>
 630:	36 fe       	sbrs	r3, 6
 632:	06 c0       	rjmp	.+12     	; 0x640 <vfprintf+0xc4>
 634:	8a e0       	ldi	r24, 0x0A	; 10
 636:	98 9e       	mul	r9, r24
 638:	20 0d       	add	r18, r0
 63a:	11 24       	eor	r1, r1
 63c:	92 2e       	mov	r9, r18
 63e:	11 c0       	rjmp	.+34     	; 0x662 <vfprintf+0xe6>
 640:	ea e0       	ldi	r30, 0x0A	; 10
 642:	2e 9e       	mul	r2, r30
 644:	20 0d       	add	r18, r0
 646:	11 24       	eor	r1, r1
 648:	22 2e       	mov	r2, r18
 64a:	f3 2d       	mov	r31, r3
 64c:	f0 62       	ori	r31, 0x20	; 32
 64e:	3f 2e       	mov	r3, r31
 650:	08 c0       	rjmp	.+16     	; 0x662 <vfprintf+0xe6>
 652:	8c 36       	cpi	r24, 0x6C	; 108
 654:	21 f4       	brne	.+8      	; 0x65e <vfprintf+0xe2>
 656:	83 2d       	mov	r24, r3
 658:	80 68       	ori	r24, 0x80	; 128
 65a:	38 2e       	mov	r3, r24
 65c:	02 c0       	rjmp	.+4      	; 0x662 <vfprintf+0xe6>
 65e:	88 36       	cpi	r24, 0x68	; 104
 660:	41 f4       	brne	.+16     	; 0x672 <vfprintf+0xf6>
 662:	f7 01       	movw	r30, r14
 664:	93 fd       	sbrc	r25, 3
 666:	85 91       	lpm	r24, Z+
 668:	93 ff       	sbrs	r25, 3
 66a:	81 91       	ld	r24, Z+
 66c:	7f 01       	movw	r14, r30
 66e:	81 11       	cpse	r24, r1
 670:	b3 cf       	rjmp	.-154    	; 0x5d8 <vfprintf+0x5c>
 672:	98 2f       	mov	r25, r24
 674:	9f 7d       	andi	r25, 0xDF	; 223
 676:	95 54       	subi	r25, 0x45	; 69
 678:	93 30       	cpi	r25, 0x03	; 3
 67a:	28 f4       	brcc	.+10     	; 0x686 <vfprintf+0x10a>
 67c:	0c 5f       	subi	r16, 0xFC	; 252
 67e:	1f 4f       	sbci	r17, 0xFF	; 255
 680:	9f e3       	ldi	r25, 0x3F	; 63
 682:	99 83       	std	Y+1, r25	; 0x01
 684:	0d c0       	rjmp	.+26     	; 0x6a0 <vfprintf+0x124>
 686:	83 36       	cpi	r24, 0x63	; 99
 688:	31 f0       	breq	.+12     	; 0x696 <vfprintf+0x11a>
 68a:	83 37       	cpi	r24, 0x73	; 115
 68c:	71 f0       	breq	.+28     	; 0x6aa <vfprintf+0x12e>
 68e:	83 35       	cpi	r24, 0x53	; 83
 690:	09 f0       	breq	.+2      	; 0x694 <vfprintf+0x118>
 692:	59 c0       	rjmp	.+178    	; 0x746 <vfprintf+0x1ca>
 694:	21 c0       	rjmp	.+66     	; 0x6d8 <vfprintf+0x15c>
 696:	f8 01       	movw	r30, r16
 698:	80 81       	ld	r24, Z
 69a:	89 83       	std	Y+1, r24	; 0x01
 69c:	0e 5f       	subi	r16, 0xFE	; 254
 69e:	1f 4f       	sbci	r17, 0xFF	; 255
 6a0:	88 24       	eor	r8, r8
 6a2:	83 94       	inc	r8
 6a4:	91 2c       	mov	r9, r1
 6a6:	53 01       	movw	r10, r6
 6a8:	13 c0       	rjmp	.+38     	; 0x6d0 <vfprintf+0x154>
 6aa:	28 01       	movw	r4, r16
 6ac:	f2 e0       	ldi	r31, 0x02	; 2
 6ae:	4f 0e       	add	r4, r31
 6b0:	51 1c       	adc	r5, r1
 6b2:	f8 01       	movw	r30, r16
 6b4:	a0 80       	ld	r10, Z
 6b6:	b1 80       	ldd	r11, Z+1	; 0x01
 6b8:	36 fe       	sbrs	r3, 6
 6ba:	03 c0       	rjmp	.+6      	; 0x6c2 <vfprintf+0x146>
 6bc:	69 2d       	mov	r22, r9
 6be:	70 e0       	ldi	r23, 0x00	; 0
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <vfprintf+0x14a>
 6c2:	6f ef       	ldi	r22, 0xFF	; 255
 6c4:	7f ef       	ldi	r23, 0xFF	; 255
 6c6:	c5 01       	movw	r24, r10
 6c8:	0e 94 aa 04 	call	0x954	; 0x954 <strnlen>
 6cc:	4c 01       	movw	r8, r24
 6ce:	82 01       	movw	r16, r4
 6d0:	f3 2d       	mov	r31, r3
 6d2:	ff 77       	andi	r31, 0x7F	; 127
 6d4:	3f 2e       	mov	r3, r31
 6d6:	16 c0       	rjmp	.+44     	; 0x704 <vfprintf+0x188>
 6d8:	28 01       	movw	r4, r16
 6da:	22 e0       	ldi	r18, 0x02	; 2
 6dc:	42 0e       	add	r4, r18
 6de:	51 1c       	adc	r5, r1
 6e0:	f8 01       	movw	r30, r16
 6e2:	a0 80       	ld	r10, Z
 6e4:	b1 80       	ldd	r11, Z+1	; 0x01
 6e6:	36 fe       	sbrs	r3, 6
 6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <vfprintf+0x174>
 6ea:	69 2d       	mov	r22, r9
 6ec:	70 e0       	ldi	r23, 0x00	; 0
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <vfprintf+0x178>
 6f0:	6f ef       	ldi	r22, 0xFF	; 255
 6f2:	7f ef       	ldi	r23, 0xFF	; 255
 6f4:	c5 01       	movw	r24, r10
 6f6:	0e 94 9f 04 	call	0x93e	; 0x93e <strnlen_P>
 6fa:	4c 01       	movw	r8, r24
 6fc:	f3 2d       	mov	r31, r3
 6fe:	f0 68       	ori	r31, 0x80	; 128
 700:	3f 2e       	mov	r3, r31
 702:	82 01       	movw	r16, r4
 704:	33 fc       	sbrc	r3, 3
 706:	1b c0       	rjmp	.+54     	; 0x73e <vfprintf+0x1c2>
 708:	82 2d       	mov	r24, r2
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	88 16       	cp	r8, r24
 70e:	99 06       	cpc	r9, r25
 710:	b0 f4       	brcc	.+44     	; 0x73e <vfprintf+0x1c2>
 712:	b6 01       	movw	r22, r12
 714:	80 e2       	ldi	r24, 0x20	; 32
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 94 b5 04 	call	0x96a	; 0x96a <fputc>
 71c:	2a 94       	dec	r2
 71e:	f4 cf       	rjmp	.-24     	; 0x708 <vfprintf+0x18c>
 720:	f5 01       	movw	r30, r10
 722:	37 fc       	sbrc	r3, 7
 724:	85 91       	lpm	r24, Z+
 726:	37 fe       	sbrs	r3, 7
 728:	81 91       	ld	r24, Z+
 72a:	5f 01       	movw	r10, r30
 72c:	b6 01       	movw	r22, r12
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	0e 94 b5 04 	call	0x96a	; 0x96a <fputc>
 734:	21 10       	cpse	r2, r1
 736:	2a 94       	dec	r2
 738:	21 e0       	ldi	r18, 0x01	; 1
 73a:	82 1a       	sub	r8, r18
 73c:	91 08       	sbc	r9, r1
 73e:	81 14       	cp	r8, r1
 740:	91 04       	cpc	r9, r1
 742:	71 f7       	brne	.-36     	; 0x720 <vfprintf+0x1a4>
 744:	e8 c0       	rjmp	.+464    	; 0x916 <__stack+0x17>
 746:	84 36       	cpi	r24, 0x64	; 100
 748:	11 f0       	breq	.+4      	; 0x74e <vfprintf+0x1d2>
 74a:	89 36       	cpi	r24, 0x69	; 105
 74c:	41 f5       	brne	.+80     	; 0x79e <vfprintf+0x222>
 74e:	f8 01       	movw	r30, r16
 750:	37 fe       	sbrs	r3, 7
 752:	07 c0       	rjmp	.+14     	; 0x762 <vfprintf+0x1e6>
 754:	60 81       	ld	r22, Z
 756:	71 81       	ldd	r23, Z+1	; 0x01
 758:	82 81       	ldd	r24, Z+2	; 0x02
 75a:	93 81       	ldd	r25, Z+3	; 0x03
 75c:	0c 5f       	subi	r16, 0xFC	; 252
 75e:	1f 4f       	sbci	r17, 0xFF	; 255
 760:	08 c0       	rjmp	.+16     	; 0x772 <vfprintf+0x1f6>
 762:	60 81       	ld	r22, Z
 764:	71 81       	ldd	r23, Z+1	; 0x01
 766:	07 2e       	mov	r0, r23
 768:	00 0c       	add	r0, r0
 76a:	88 0b       	sbc	r24, r24
 76c:	99 0b       	sbc	r25, r25
 76e:	0e 5f       	subi	r16, 0xFE	; 254
 770:	1f 4f       	sbci	r17, 0xFF	; 255
 772:	f3 2d       	mov	r31, r3
 774:	ff 76       	andi	r31, 0x6F	; 111
 776:	3f 2e       	mov	r3, r31
 778:	97 ff       	sbrs	r25, 7
 77a:	09 c0       	rjmp	.+18     	; 0x78e <vfprintf+0x212>
 77c:	90 95       	com	r25
 77e:	80 95       	com	r24
 780:	70 95       	com	r23
 782:	61 95       	neg	r22
 784:	7f 4f       	sbci	r23, 0xFF	; 255
 786:	8f 4f       	sbci	r24, 0xFF	; 255
 788:	9f 4f       	sbci	r25, 0xFF	; 255
 78a:	f0 68       	ori	r31, 0x80	; 128
 78c:	3f 2e       	mov	r3, r31
 78e:	2a e0       	ldi	r18, 0x0A	; 10
 790:	30 e0       	ldi	r19, 0x00	; 0
 792:	a3 01       	movw	r20, r6
 794:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__ultoa_invert>
 798:	88 2e       	mov	r8, r24
 79a:	86 18       	sub	r8, r6
 79c:	45 c0       	rjmp	.+138    	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 79e:	85 37       	cpi	r24, 0x75	; 117
 7a0:	31 f4       	brne	.+12     	; 0x7ae <vfprintf+0x232>
 7a2:	23 2d       	mov	r18, r3
 7a4:	2f 7e       	andi	r18, 0xEF	; 239
 7a6:	b2 2e       	mov	r11, r18
 7a8:	2a e0       	ldi	r18, 0x0A	; 10
 7aa:	30 e0       	ldi	r19, 0x00	; 0
 7ac:	25 c0       	rjmp	.+74     	; 0x7f8 <vfprintf+0x27c>
 7ae:	93 2d       	mov	r25, r3
 7b0:	99 7f       	andi	r25, 0xF9	; 249
 7b2:	b9 2e       	mov	r11, r25
 7b4:	8f 36       	cpi	r24, 0x6F	; 111
 7b6:	c1 f0       	breq	.+48     	; 0x7e8 <vfprintf+0x26c>
 7b8:	18 f4       	brcc	.+6      	; 0x7c0 <vfprintf+0x244>
 7ba:	88 35       	cpi	r24, 0x58	; 88
 7bc:	79 f0       	breq	.+30     	; 0x7dc <vfprintf+0x260>
 7be:	b5 c0       	rjmp	.+362    	; 0x92a <__stack+0x2b>
 7c0:	80 37       	cpi	r24, 0x70	; 112
 7c2:	19 f0       	breq	.+6      	; 0x7ca <vfprintf+0x24e>
 7c4:	88 37       	cpi	r24, 0x78	; 120
 7c6:	21 f0       	breq	.+8      	; 0x7d0 <vfprintf+0x254>
 7c8:	b0 c0       	rjmp	.+352    	; 0x92a <__stack+0x2b>
 7ca:	e9 2f       	mov	r30, r25
 7cc:	e0 61       	ori	r30, 0x10	; 16
 7ce:	be 2e       	mov	r11, r30
 7d0:	b4 fe       	sbrs	r11, 4
 7d2:	0d c0       	rjmp	.+26     	; 0x7ee <vfprintf+0x272>
 7d4:	fb 2d       	mov	r31, r11
 7d6:	f4 60       	ori	r31, 0x04	; 4
 7d8:	bf 2e       	mov	r11, r31
 7da:	09 c0       	rjmp	.+18     	; 0x7ee <vfprintf+0x272>
 7dc:	34 fe       	sbrs	r3, 4
 7de:	0a c0       	rjmp	.+20     	; 0x7f4 <vfprintf+0x278>
 7e0:	29 2f       	mov	r18, r25
 7e2:	26 60       	ori	r18, 0x06	; 6
 7e4:	b2 2e       	mov	r11, r18
 7e6:	06 c0       	rjmp	.+12     	; 0x7f4 <vfprintf+0x278>
 7e8:	28 e0       	ldi	r18, 0x08	; 8
 7ea:	30 e0       	ldi	r19, 0x00	; 0
 7ec:	05 c0       	rjmp	.+10     	; 0x7f8 <vfprintf+0x27c>
 7ee:	20 e1       	ldi	r18, 0x10	; 16
 7f0:	30 e0       	ldi	r19, 0x00	; 0
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <vfprintf+0x27c>
 7f4:	20 e1       	ldi	r18, 0x10	; 16
 7f6:	32 e0       	ldi	r19, 0x02	; 2
 7f8:	f8 01       	movw	r30, r16
 7fa:	b7 fe       	sbrs	r11, 7
 7fc:	07 c0       	rjmp	.+14     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 7fe:	60 81       	ld	r22, Z
 800:	71 81       	ldd	r23, Z+1	; 0x01
 802:	82 81       	ldd	r24, Z+2	; 0x02
 804:	93 81       	ldd	r25, Z+3	; 0x03
 806:	0c 5f       	subi	r16, 0xFC	; 252
 808:	1f 4f       	sbci	r17, 0xFF	; 255
 80a:	06 c0       	rjmp	.+12     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 80c:	60 81       	ld	r22, Z
 80e:	71 81       	ldd	r23, Z+1	; 0x01
 810:	80 e0       	ldi	r24, 0x00	; 0
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	0e 5f       	subi	r16, 0xFE	; 254
 816:	1f 4f       	sbci	r17, 0xFF	; 255
 818:	a3 01       	movw	r20, r6
 81a:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__ultoa_invert>
 81e:	88 2e       	mov	r8, r24
 820:	86 18       	sub	r8, r6
 822:	fb 2d       	mov	r31, r11
 824:	ff 77       	andi	r31, 0x7F	; 127
 826:	3f 2e       	mov	r3, r31
 828:	36 fe       	sbrs	r3, 6
 82a:	0d c0       	rjmp	.+26     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 82c:	23 2d       	mov	r18, r3
 82e:	2e 7f       	andi	r18, 0xFE	; 254
 830:	a2 2e       	mov	r10, r18
 832:	89 14       	cp	r8, r9
 834:	58 f4       	brcc	.+22     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 836:	34 fe       	sbrs	r3, 4
 838:	0b c0       	rjmp	.+22     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 83a:	32 fc       	sbrc	r3, 2
 83c:	09 c0       	rjmp	.+18     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 83e:	83 2d       	mov	r24, r3
 840:	8e 7e       	andi	r24, 0xEE	; 238
 842:	a8 2e       	mov	r10, r24
 844:	05 c0       	rjmp	.+10     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 846:	b8 2c       	mov	r11, r8
 848:	a3 2c       	mov	r10, r3
 84a:	03 c0       	rjmp	.+6      	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 84c:	b8 2c       	mov	r11, r8
 84e:	01 c0       	rjmp	.+2      	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 850:	b9 2c       	mov	r11, r9
 852:	a4 fe       	sbrs	r10, 4
 854:	0f c0       	rjmp	.+30     	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 856:	fe 01       	movw	r30, r28
 858:	e8 0d       	add	r30, r8
 85a:	f1 1d       	adc	r31, r1
 85c:	80 81       	ld	r24, Z
 85e:	80 33       	cpi	r24, 0x30	; 48
 860:	21 f4       	brne	.+8      	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 862:	9a 2d       	mov	r25, r10
 864:	99 7e       	andi	r25, 0xE9	; 233
 866:	a9 2e       	mov	r10, r25
 868:	09 c0       	rjmp	.+18     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 86a:	a2 fe       	sbrs	r10, 2
 86c:	06 c0       	rjmp	.+12     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 86e:	b3 94       	inc	r11
 870:	b3 94       	inc	r11
 872:	04 c0       	rjmp	.+8      	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 874:	8a 2d       	mov	r24, r10
 876:	86 78       	andi	r24, 0x86	; 134
 878:	09 f0       	breq	.+2      	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 87a:	b3 94       	inc	r11
 87c:	a3 fc       	sbrc	r10, 3
 87e:	11 c0       	rjmp	.+34     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
 880:	a0 fe       	sbrs	r10, 0
 882:	06 c0       	rjmp	.+12     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 884:	b2 14       	cp	r11, r2
 886:	88 f4       	brcc	.+34     	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
 888:	28 0c       	add	r2, r8
 88a:	92 2c       	mov	r9, r2
 88c:	9b 18       	sub	r9, r11
 88e:	0e c0       	rjmp	.+28     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 890:	b2 14       	cp	r11, r2
 892:	60 f4       	brcc	.+24     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 894:	b6 01       	movw	r22, r12
 896:	80 e2       	ldi	r24, 0x20	; 32
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	0e 94 b5 04 	call	0x96a	; 0x96a <fputc>
 89e:	b3 94       	inc	r11
 8a0:	f7 cf       	rjmp	.-18     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 8a2:	b2 14       	cp	r11, r2
 8a4:	18 f4       	brcc	.+6      	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 8a6:	2b 18       	sub	r2, r11
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 8aa:	98 2c       	mov	r9, r8
 8ac:	21 2c       	mov	r2, r1
 8ae:	a4 fe       	sbrs	r10, 4
 8b0:	10 c0       	rjmp	.+32     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8b2:	b6 01       	movw	r22, r12
 8b4:	80 e3       	ldi	r24, 0x30	; 48
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	0e 94 b5 04 	call	0x96a	; 0x96a <fputc>
 8bc:	a2 fe       	sbrs	r10, 2
 8be:	17 c0       	rjmp	.+46     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8c0:	a1 fc       	sbrc	r10, 1
 8c2:	03 c0       	rjmp	.+6      	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8c4:	88 e7       	ldi	r24, 0x78	; 120
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8ca:	88 e5       	ldi	r24, 0x58	; 88
 8cc:	90 e0       	ldi	r25, 0x00	; 0
 8ce:	b6 01       	movw	r22, r12
 8d0:	0c c0       	rjmp	.+24     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
 8d2:	8a 2d       	mov	r24, r10
 8d4:	86 78       	andi	r24, 0x86	; 134
 8d6:	59 f0       	breq	.+22     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8d8:	a1 fe       	sbrs	r10, 1
 8da:	02 c0       	rjmp	.+4      	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
 8dc:	8b e2       	ldi	r24, 0x2B	; 43
 8de:	01 c0       	rjmp	.+2      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8e0:	80 e2       	ldi	r24, 0x20	; 32
 8e2:	a7 fc       	sbrc	r10, 7
 8e4:	8d e2       	ldi	r24, 0x2D	; 45
 8e6:	b6 01       	movw	r22, r12
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	0e 94 b5 04 	call	0x96a	; 0x96a <fputc>
 8ee:	89 14       	cp	r8, r9
 8f0:	38 f4       	brcc	.+14     	; 0x900 <__stack+0x1>
 8f2:	b6 01       	movw	r22, r12
 8f4:	80 e3       	ldi	r24, 0x30	; 48
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	0e 94 b5 04 	call	0x96a	; 0x96a <fputc>
 8fc:	9a 94       	dec	r9
 8fe:	f7 cf       	rjmp	.-18     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 900:	8a 94       	dec	r8
 902:	f3 01       	movw	r30, r6
 904:	e8 0d       	add	r30, r8
 906:	f1 1d       	adc	r31, r1
 908:	80 81       	ld	r24, Z
 90a:	b6 01       	movw	r22, r12
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	0e 94 b5 04 	call	0x96a	; 0x96a <fputc>
 912:	81 10       	cpse	r8, r1
 914:	f5 cf       	rjmp	.-22     	; 0x900 <__stack+0x1>
 916:	22 20       	and	r2, r2
 918:	09 f4       	brne	.+2      	; 0x91c <__stack+0x1d>
 91a:	42 ce       	rjmp	.-892    	; 0x5a0 <vfprintf+0x24>
 91c:	b6 01       	movw	r22, r12
 91e:	80 e2       	ldi	r24, 0x20	; 32
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	0e 94 b5 04 	call	0x96a	; 0x96a <fputc>
 926:	2a 94       	dec	r2
 928:	f6 cf       	rjmp	.-20     	; 0x916 <__stack+0x17>
 92a:	f6 01       	movw	r30, r12
 92c:	86 81       	ldd	r24, Z+6	; 0x06
 92e:	97 81       	ldd	r25, Z+7	; 0x07
 930:	02 c0       	rjmp	.+4      	; 0x936 <__stack+0x37>
 932:	8f ef       	ldi	r24, 0xFF	; 255
 934:	9f ef       	ldi	r25, 0xFF	; 255
 936:	2b 96       	adiw	r28, 0x0b	; 11
 938:	e2 e1       	ldi	r30, 0x12	; 18
 93a:	0c 94 6b 05 	jmp	0xad6	; 0xad6 <__epilogue_restores__>

0000093e <strnlen_P>:
 93e:	fc 01       	movw	r30, r24
 940:	05 90       	lpm	r0, Z+
 942:	61 50       	subi	r22, 0x01	; 1
 944:	70 40       	sbci	r23, 0x00	; 0
 946:	01 10       	cpse	r0, r1
 948:	d8 f7       	brcc	.-10     	; 0x940 <strnlen_P+0x2>
 94a:	80 95       	com	r24
 94c:	90 95       	com	r25
 94e:	8e 0f       	add	r24, r30
 950:	9f 1f       	adc	r25, r31
 952:	08 95       	ret

00000954 <strnlen>:
 954:	fc 01       	movw	r30, r24
 956:	61 50       	subi	r22, 0x01	; 1
 958:	70 40       	sbci	r23, 0x00	; 0
 95a:	01 90       	ld	r0, Z+
 95c:	01 10       	cpse	r0, r1
 95e:	d8 f7       	brcc	.-10     	; 0x956 <strnlen+0x2>
 960:	80 95       	com	r24
 962:	90 95       	com	r25
 964:	8e 0f       	add	r24, r30
 966:	9f 1f       	adc	r25, r31
 968:	08 95       	ret

0000096a <fputc>:
 96a:	0f 93       	push	r16
 96c:	1f 93       	push	r17
 96e:	cf 93       	push	r28
 970:	df 93       	push	r29
 972:	fb 01       	movw	r30, r22
 974:	23 81       	ldd	r18, Z+3	; 0x03
 976:	21 fd       	sbrc	r18, 1
 978:	03 c0       	rjmp	.+6      	; 0x980 <fputc+0x16>
 97a:	8f ef       	ldi	r24, 0xFF	; 255
 97c:	9f ef       	ldi	r25, 0xFF	; 255
 97e:	2c c0       	rjmp	.+88     	; 0x9d8 <fputc+0x6e>
 980:	22 ff       	sbrs	r18, 2
 982:	16 c0       	rjmp	.+44     	; 0x9b0 <fputc+0x46>
 984:	46 81       	ldd	r20, Z+6	; 0x06
 986:	57 81       	ldd	r21, Z+7	; 0x07
 988:	24 81       	ldd	r18, Z+4	; 0x04
 98a:	35 81       	ldd	r19, Z+5	; 0x05
 98c:	42 17       	cp	r20, r18
 98e:	53 07       	cpc	r21, r19
 990:	44 f4       	brge	.+16     	; 0x9a2 <fputc+0x38>
 992:	a0 81       	ld	r26, Z
 994:	b1 81       	ldd	r27, Z+1	; 0x01
 996:	9d 01       	movw	r18, r26
 998:	2f 5f       	subi	r18, 0xFF	; 255
 99a:	3f 4f       	sbci	r19, 0xFF	; 255
 99c:	31 83       	std	Z+1, r19	; 0x01
 99e:	20 83       	st	Z, r18
 9a0:	8c 93       	st	X, r24
 9a2:	26 81       	ldd	r18, Z+6	; 0x06
 9a4:	37 81       	ldd	r19, Z+7	; 0x07
 9a6:	2f 5f       	subi	r18, 0xFF	; 255
 9a8:	3f 4f       	sbci	r19, 0xFF	; 255
 9aa:	37 83       	std	Z+7, r19	; 0x07
 9ac:	26 83       	std	Z+6, r18	; 0x06
 9ae:	14 c0       	rjmp	.+40     	; 0x9d8 <fputc+0x6e>
 9b0:	8b 01       	movw	r16, r22
 9b2:	ec 01       	movw	r28, r24
 9b4:	fb 01       	movw	r30, r22
 9b6:	00 84       	ldd	r0, Z+8	; 0x08
 9b8:	f1 85       	ldd	r31, Z+9	; 0x09
 9ba:	e0 2d       	mov	r30, r0
 9bc:	09 95       	icall
 9be:	89 2b       	or	r24, r25
 9c0:	e1 f6       	brne	.-72     	; 0x97a <fputc+0x10>
 9c2:	d8 01       	movw	r26, r16
 9c4:	16 96       	adiw	r26, 0x06	; 6
 9c6:	8d 91       	ld	r24, X+
 9c8:	9c 91       	ld	r25, X
 9ca:	17 97       	sbiw	r26, 0x07	; 7
 9cc:	01 96       	adiw	r24, 0x01	; 1
 9ce:	17 96       	adiw	r26, 0x07	; 7
 9d0:	9c 93       	st	X, r25
 9d2:	8e 93       	st	-X, r24
 9d4:	16 97       	sbiw	r26, 0x06	; 6
 9d6:	ce 01       	movw	r24, r28
 9d8:	df 91       	pop	r29
 9da:	cf 91       	pop	r28
 9dc:	1f 91       	pop	r17
 9de:	0f 91       	pop	r16
 9e0:	08 95       	ret

000009e2 <__ultoa_invert>:
 9e2:	fa 01       	movw	r30, r20
 9e4:	aa 27       	eor	r26, r26
 9e6:	28 30       	cpi	r18, 0x08	; 8
 9e8:	51 f1       	breq	.+84     	; 0xa3e <__ultoa_invert+0x5c>
 9ea:	20 31       	cpi	r18, 0x10	; 16
 9ec:	81 f1       	breq	.+96     	; 0xa4e <__ultoa_invert+0x6c>
 9ee:	e8 94       	clt
 9f0:	6f 93       	push	r22
 9f2:	6e 7f       	andi	r22, 0xFE	; 254
 9f4:	6e 5f       	subi	r22, 0xFE	; 254
 9f6:	7f 4f       	sbci	r23, 0xFF	; 255
 9f8:	8f 4f       	sbci	r24, 0xFF	; 255
 9fa:	9f 4f       	sbci	r25, 0xFF	; 255
 9fc:	af 4f       	sbci	r26, 0xFF	; 255
 9fe:	b1 e0       	ldi	r27, 0x01	; 1
 a00:	3e d0       	rcall	.+124    	; 0xa7e <__ultoa_invert+0x9c>
 a02:	b4 e0       	ldi	r27, 0x04	; 4
 a04:	3c d0       	rcall	.+120    	; 0xa7e <__ultoa_invert+0x9c>
 a06:	67 0f       	add	r22, r23
 a08:	78 1f       	adc	r23, r24
 a0a:	89 1f       	adc	r24, r25
 a0c:	9a 1f       	adc	r25, r26
 a0e:	a1 1d       	adc	r26, r1
 a10:	68 0f       	add	r22, r24
 a12:	79 1f       	adc	r23, r25
 a14:	8a 1f       	adc	r24, r26
 a16:	91 1d       	adc	r25, r1
 a18:	a1 1d       	adc	r26, r1
 a1a:	6a 0f       	add	r22, r26
 a1c:	71 1d       	adc	r23, r1
 a1e:	81 1d       	adc	r24, r1
 a20:	91 1d       	adc	r25, r1
 a22:	a1 1d       	adc	r26, r1
 a24:	20 d0       	rcall	.+64     	; 0xa66 <__ultoa_invert+0x84>
 a26:	09 f4       	brne	.+2      	; 0xa2a <__ultoa_invert+0x48>
 a28:	68 94       	set
 a2a:	3f 91       	pop	r19
 a2c:	2a e0       	ldi	r18, 0x0A	; 10
 a2e:	26 9f       	mul	r18, r22
 a30:	11 24       	eor	r1, r1
 a32:	30 19       	sub	r19, r0
 a34:	30 5d       	subi	r19, 0xD0	; 208
 a36:	31 93       	st	Z+, r19
 a38:	de f6       	brtc	.-74     	; 0x9f0 <__ultoa_invert+0xe>
 a3a:	cf 01       	movw	r24, r30
 a3c:	08 95       	ret
 a3e:	46 2f       	mov	r20, r22
 a40:	47 70       	andi	r20, 0x07	; 7
 a42:	40 5d       	subi	r20, 0xD0	; 208
 a44:	41 93       	st	Z+, r20
 a46:	b3 e0       	ldi	r27, 0x03	; 3
 a48:	0f d0       	rcall	.+30     	; 0xa68 <__ultoa_invert+0x86>
 a4a:	c9 f7       	brne	.-14     	; 0xa3e <__ultoa_invert+0x5c>
 a4c:	f6 cf       	rjmp	.-20     	; 0xa3a <__ultoa_invert+0x58>
 a4e:	46 2f       	mov	r20, r22
 a50:	4f 70       	andi	r20, 0x0F	; 15
 a52:	40 5d       	subi	r20, 0xD0	; 208
 a54:	4a 33       	cpi	r20, 0x3A	; 58
 a56:	18 f0       	brcs	.+6      	; 0xa5e <__ultoa_invert+0x7c>
 a58:	49 5d       	subi	r20, 0xD9	; 217
 a5a:	31 fd       	sbrc	r19, 1
 a5c:	40 52       	subi	r20, 0x20	; 32
 a5e:	41 93       	st	Z+, r20
 a60:	02 d0       	rcall	.+4      	; 0xa66 <__ultoa_invert+0x84>
 a62:	a9 f7       	brne	.-22     	; 0xa4e <__ultoa_invert+0x6c>
 a64:	ea cf       	rjmp	.-44     	; 0xa3a <__ultoa_invert+0x58>
 a66:	b4 e0       	ldi	r27, 0x04	; 4
 a68:	a6 95       	lsr	r26
 a6a:	97 95       	ror	r25
 a6c:	87 95       	ror	r24
 a6e:	77 95       	ror	r23
 a70:	67 95       	ror	r22
 a72:	ba 95       	dec	r27
 a74:	c9 f7       	brne	.-14     	; 0xa68 <__ultoa_invert+0x86>
 a76:	00 97       	sbiw	r24, 0x00	; 0
 a78:	61 05       	cpc	r22, r1
 a7a:	71 05       	cpc	r23, r1
 a7c:	08 95       	ret
 a7e:	9b 01       	movw	r18, r22
 a80:	ac 01       	movw	r20, r24
 a82:	0a 2e       	mov	r0, r26
 a84:	06 94       	lsr	r0
 a86:	57 95       	ror	r21
 a88:	47 95       	ror	r20
 a8a:	37 95       	ror	r19
 a8c:	27 95       	ror	r18
 a8e:	ba 95       	dec	r27
 a90:	c9 f7       	brne	.-14     	; 0xa84 <__ultoa_invert+0xa2>
 a92:	62 0f       	add	r22, r18
 a94:	73 1f       	adc	r23, r19
 a96:	84 1f       	adc	r24, r20
 a98:	95 1f       	adc	r25, r21
 a9a:	a0 1d       	adc	r26, r0
 a9c:	08 95       	ret

00000a9e <__prologue_saves__>:
 a9e:	2f 92       	push	r2
 aa0:	3f 92       	push	r3
 aa2:	4f 92       	push	r4
 aa4:	5f 92       	push	r5
 aa6:	6f 92       	push	r6
 aa8:	7f 92       	push	r7
 aaa:	8f 92       	push	r8
 aac:	9f 92       	push	r9
 aae:	af 92       	push	r10
 ab0:	bf 92       	push	r11
 ab2:	cf 92       	push	r12
 ab4:	df 92       	push	r13
 ab6:	ef 92       	push	r14
 ab8:	ff 92       	push	r15
 aba:	0f 93       	push	r16
 abc:	1f 93       	push	r17
 abe:	cf 93       	push	r28
 ac0:	df 93       	push	r29
 ac2:	cd b7       	in	r28, 0x3d	; 61
 ac4:	de b7       	in	r29, 0x3e	; 62
 ac6:	ca 1b       	sub	r28, r26
 ac8:	db 0b       	sbc	r29, r27
 aca:	0f b6       	in	r0, 0x3f	; 63
 acc:	f8 94       	cli
 ace:	de bf       	out	0x3e, r29	; 62
 ad0:	0f be       	out	0x3f, r0	; 63
 ad2:	cd bf       	out	0x3d, r28	; 61
 ad4:	09 94       	ijmp

00000ad6 <__epilogue_restores__>:
 ad6:	2a 88       	ldd	r2, Y+18	; 0x12
 ad8:	39 88       	ldd	r3, Y+17	; 0x11
 ada:	48 88       	ldd	r4, Y+16	; 0x10
 adc:	5f 84       	ldd	r5, Y+15	; 0x0f
 ade:	6e 84       	ldd	r6, Y+14	; 0x0e
 ae0:	7d 84       	ldd	r7, Y+13	; 0x0d
 ae2:	8c 84       	ldd	r8, Y+12	; 0x0c
 ae4:	9b 84       	ldd	r9, Y+11	; 0x0b
 ae6:	aa 84       	ldd	r10, Y+10	; 0x0a
 ae8:	b9 84       	ldd	r11, Y+9	; 0x09
 aea:	c8 84       	ldd	r12, Y+8	; 0x08
 aec:	df 80       	ldd	r13, Y+7	; 0x07
 aee:	ee 80       	ldd	r14, Y+6	; 0x06
 af0:	fd 80       	ldd	r15, Y+5	; 0x05
 af2:	0c 81       	ldd	r16, Y+4	; 0x04
 af4:	1b 81       	ldd	r17, Y+3	; 0x03
 af6:	aa 81       	ldd	r26, Y+2	; 0x02
 af8:	b9 81       	ldd	r27, Y+1	; 0x01
 afa:	ce 0f       	add	r28, r30
 afc:	d1 1d       	adc	r29, r1
 afe:	0f b6       	in	r0, 0x3f	; 63
 b00:	f8 94       	cli
 b02:	de bf       	out	0x3e, r29	; 62
 b04:	0f be       	out	0x3f, r0	; 63
 b06:	cd bf       	out	0x3d, r28	; 61
 b08:	ed 01       	movw	r28, r26
 b0a:	08 95       	ret

00000b0c <_exit>:
 b0c:	f8 94       	cli

00000b0e <__stop_program>:
 b0e:	ff cf       	rjmp	.-2      	; 0xb0e <__stop_program>
